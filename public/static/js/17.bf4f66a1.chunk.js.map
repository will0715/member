{"version":3,"sources":["services/earnChopRuleService.js","constants/paymentTypes.js","constants/ruleTypes.js","views/earnChopRule/EarnChopRuleCreate/EarnChopRuleCreateForm.js","views/earnChopRule/EarnChopRuleCreate/Header.js","views/earnChopRule/EarnChopRuleCreate/index.js","hooks/useIsMountedRef.js","utils/analytics.js","components/Page.js","services/rankService.js","hooks/useRank.js"],"names":["earnChopRuleService","list","a","axios","get","earnChopRules","create","data","post","earnChopRule","id","update","patch","delete","paymentTypes","ruleTypes","useStyles","makeStyles","root","EarnChopRuleCreateForm","className","ranks","rest","classes","enqueueSnackbar","useSnackbar","t","useTranslation","initialValues","name","description","payment_type","type","rule_unit","rule_chops","rank_id","activated_at","moment","format","expired_at","validationSchema","Yup","shape","max","required","oneOf","min","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","success","variant","submit","response","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setFieldValue","clsx","Card","CardContent","Box","mb","Alert","severity","Grid","container","spacing","item","md","xs","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","value","select","SelectProps","native","map","rank","key","paymentType","ruleType","DateTimePicker","date","inputVariant","mt","Button","color","disabled","Header","Breadcrumbs","separator","fontSize","aria-label","Link","to","component","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","EarnChopRuleEditView","useRank","length","Page","title","Container","maxWidth","useIsMountedRef","isMounted","useRef","useEffect","current","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","Helmet","rankService","useState","setRanks","isMountedRef","getRanks","deleteRank"],"mappings":"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","file":"static/js/17.bf4f66a1.chunk.js","sourcesContent":["import axios from '../utils/axios';\n\nclass EarnChopRuleService {\n  list = async () => {\n    const earnChopRules = await axios.get('/api/v1/earnChopRules');\n    return earnChopRules;\n  };\n\n  create = async (data) => {\n    const earnChopRule = await axios.post('/api/v1/earnChopRules', data);\n    return earnChopRule;\n  };\n\n  get = async (id) => {\n    const earnChopRule = await axios.get(`/api/v1/earnChopRules/${id}`);\n    return earnChopRule;\n  };\n\n  update = async (id, data) => {\n    const earnChopRule = await axios.patch(`/api/v1/earnChopRules/${id}`, data);\n    return earnChopRule;\n  };\n\n  delete = async (id) => {\n    const earnChopRule = await axios.delete(`/api/v1/earnChopRules/${id}`);\n    return earnChopRule;\n  };\n}\n\nconst earnChopRuleService = new EarnChopRuleService();\n\nexport default earnChopRuleService;\n","// eslint-disable-next-line import/prefer-default-export\nexport const paymentTypes = ['ALL', 'LINE_PAY', 'CASH'];\n","// eslint-disable-next-line import/prefer-default-export\nexport const ruleTypes = ['AMOUNT', 'ITEM_COUNT'];\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { Alert } from '@material-ui/lab';\nimport { paymentTypes } from '../../../constants/paymentTypes';\nimport { ruleTypes } from '../../../constants/ruleTypes';\nimport moment from 'moment-timezone';\nimport { useTranslation } from 'react-i18next';\nimport earnChopRuleService from '../../../services/earnChopRuleService';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction EarnChopRuleCreateForm({ className, ranks, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { t } = useTranslation();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        description: '',\n        payment_type: 'ALL',\n        type: 'AMOUNT',\n        rule_unit: 1,\n        rule_chops: 1,\n        rank_id: ranks[0].id,\n        activated_at: moment().format('YYYY-MM-DD HH:mm:ss'),\n        expired_at: moment().format('YYYY-MM-DD HH:mm:ss')\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Name') })),\n        description: Yup.string().max(255),\n        payment_type: Yup.string().oneOf(['ALL', 'LINE_PAY', 'CASH']),\n        type: Yup.string().oneOf(['AMOUNT', 'ITEM_COUNT']),\n        rule_unit: Yup.number().min(1),\n        rule_chops: Yup.number().min(0)\n      })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          await await earnChopRuleService.create({\n            ...values\n          });\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar(t('Created', { name: t('Earn Chop Rule') }), {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.response.data.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n        setFieldValue\n      }) => (\n        <form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              {errors.submit && (\n                <Box mb={3}>\n                  <Alert severity=\"error\">{errors.submit}</Alert>\n                </Box>\n              )}\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label={t('Name')}\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.description && errors.description)}\n                    fullWidth\n                    helperText={touched.description && errors.description}\n                    label={t('Description')}\n                    name=\"description\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.description}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Rank')}\n                    name=\"rank_id\"\n                    onChange={handleChange}\n                    select\n                    required\n                    SelectProps={{ native: true }}\n                    value={values.rank_id}\n                    variant=\"outlined\"\n                  >\n                    {ranks.map((rank) => (\n                      <option key={rank.id} value={rank.id}>\n                        {rank.name}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Payment Type')}\n                    name=\"payment_type\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.payment_type}\n                    variant=\"outlined\"\n                  >\n                    {paymentTypes.map((paymentType) => (\n                      <option key={paymentType} value={paymentType}>\n                        {t(`PaymentType.${paymentType}`)}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Type')}\n                    name=\"type\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.type}\n                    variant=\"outlined\"\n                  >\n                    {ruleTypes.map((ruleType) => (\n                      <option key={ruleType} value={ruleType}>\n                        {t(`Type.${ruleType}`)}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={12} xs={12} />\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.rule_unit && errors.rule_unit)}\n                    fullWidth\n                    helperText={touched.rule_unit && errors.rule_unit}\n                    label={t('Rule Unit')}\n                    name=\"rule_unit\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.rule_unit}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.rule_chops && errors.rule_chops)}\n                    fullWidth\n                    helperText={touched.rule_chops && errors.rule_chops}\n                    label={t('Rule Chops')}\n                    name=\"rule_chops\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.rule_chops}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={12} xs={12} />\n                <Grid item md={6} xs={12}>\n                  <DateTimePicker\n                    error={Boolean(touched.activated_at && errors.activated_at)}\n                    fullWidth\n                    helperText={touched.activated_at && errors.activated_at}\n                    value={values.activated_at}\n                    label={t('Activated At')}\n                    name=\"activated_at\"\n                    onBlur={handleBlur}\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                    required\n                    onChange={(date) =>\n                      setFieldValue('activated_at', moment(date).format('YYYY-MM-DD HH:mm:ss'))\n                    }\n                    inputVariant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <DateTimePicker\n                    error={Boolean(touched.expired_at && errors.expired_at)}\n                    fullWidth\n                    helperText={touched.expired_at && errors.expired_at}\n                    value={values.expired_at}\n                    label={t('Expired At')}\n                    name=\"expired_at\"\n                    onBlur={handleBlur}\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                    required\n                    onChange={(date) =>\n                      setFieldValue('expired_at', moment(date).format('YYYY-MM-DD HH:mm:ss'))\n                    }\n                    inputVariant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                  {t('Submit')}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nEarnChopRuleCreateForm.propTypes = {\n  className: PropTypes.string,\n  ranks: PropTypes.array.isRequired\n};\n\nexport default EarnChopRuleCreateForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Breadcrumbs, Link, Typography, makeStyles } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link variant=\"body1\" color=\"inherit\" to=\"/\" component={RouterLink}>\n          {t('Dashboard')}\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/earnChopRules\"\n          component={RouterLink}\n        >\n          {t('Earn Chop Rule List')}\n        </Link>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          {t('Create Earn Chop Rules')}\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        {t('Create Earn Chop Rules')}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport EarnChopRuleCreateForm from './EarnChopRuleCreateForm';\nimport Header from './Header';\nimport { useParams } from 'react-router-dom';\nimport useRank from '../../../hooks/useRank';\nimport { useTranslation } from 'react-i18next';\nimport earnChopRuleService from '../../../services/earnChopRuleService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction EarnChopRuleEditView() {\n  const classes = useStyles();\n  const { ranks } = useRank();\n  const { t } = useTranslation();\n\n  if (!ranks.length) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title={t('Create Earn Chop Rules')}>\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <EarnChopRuleCreateForm ranks={ranks} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default EarnChopRuleEditView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import axios from '../utils/axios';\n\nclass RankService {\n  list = async () => {\n    const ranks = await axios.get('/api/v1/ranks');\n    return ranks;\n  };\n\n  create = async (data) => {\n    const rank = await axios.post('/api/v1/ranks', data);\n    return rank;\n  };\n\n  get = async (id) => {\n    const rank = await axios.get(`/api/v1/ranks/${id}`);\n    return rank;\n  };\n\n  update = async (id, data) => {\n    const rank = await axios.patch(`/api/v1/ranks/${id}`, data);\n    return rank;\n  };\n\n  delete = async (id) => {\n    const rank = await axios.delete(`/api/v1/ranks/${id}`);\n    return rank;\n  };\n}\n\nconst rankService = new RankService();\n\nexport default rankService;\n","import { useState, useEffect, useCallback } from 'react';\nimport useIsMountedRef from './useIsMountedRef';\nimport rankService from '../services/rankService';\n\nexport default function useRank() {\n  const [ranks, setRanks] = useState([]);\n  const isMountedRef = useIsMountedRef();\n\n  const getRanks = useCallback(async () => {\n    const data = await rankService.list();\n    setRanks(data.data.data);\n  }, [isMountedRef]);\n\n  const deleteRank = useCallback(\n    async (id) => {\n      await rankService.delete(id);\n      getRanks();\n    },\n    [getRanks]\n  );\n\n  useEffect(() => {\n    getRanks();\n  }, [getRanks]);\n\n  return { ranks, deleteRank };\n}\n"],"sourceRoot":""}