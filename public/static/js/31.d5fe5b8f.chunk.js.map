{"version":3,"sources":["views/pages/AccountView/Header.js","views/pages/AccountView/General/ProfileDetails.js","views/pages/AccountView/General/GeneralSettings.js","views/pages/AccountView/General/index.js","views/pages/AccountView/index.js","utils/analytics.js","components/Page.js","../node_modules/@material-ui/icons/NavigateNext.js","hooks/useSnackbar.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","color","to","component","RouterLink","Typography","variant","theme","name","marginTop","spacing","avatar","height","width","ProfileDetails","user","Card","CardContent","Box","display","alignItems","flexDirection","textAlign","Avatar","src","gutterBottom","GeneralSettings","dispatch","useDispatch","successSnackbar","useSnackbar","initialValues","email","password","validationSchema","Yup","shape","max","required","min","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","updateProfile","id","success","error","console","submit","response","data","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mb","Alert","severity","Grid","container","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","value","type","mt","Button","disabled","General","useSelector","state","account","lg","xl","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","AccountView","Page","title","Container","maxWidth","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","enqueueSnackbar","useBaseSnackbar","text","anchorOrigin","vertical","horizontal","createSvgIcon","React","defaultIconMapping","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","action","_props$closeText","closeText","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","_props$variant","other","_objectWithoutProperties","Paper","_extends","square","elevation","concat","capitalize","IconButton","size","onClick","withStyles","getColor","darken","lighten","getBackgroundColor","typography","body2","borderRadius","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","justifyContent","marginLeft","paddingLeft"],"mappings":"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","file":"static/js/31.d5fe5b8f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Typography,\n  Breadcrumbs,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link color=\"inherit\" to=\"/app\" component={RouterLink}>\n          Dashboard\n        </Link>\n        <Typography color=\"textPrimary\">\n          Account\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Settings\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nfunction ProfileDetails({ user, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          textAlign=\"center\"\n        >\n          <Avatar className={classes.avatar} src={user.avatar} />\n          <Typography\n            className={classes.name}\n            gutterBottom\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {`${user.name}`}\n          </Typography>\n          {/* <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {user.timezone}\n          </Typography> */}\n        </Box>\n      </CardContent>\n      {/* <CardActions>\n        <Button\n          fullWidth\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport useSnackbar from '../../../../hooks/useSnackbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { updateProfile } from '../../../../actions/accountActions';\nimport userService from '../../../../services/userService';\n\nconst stateOptions = ['Alabama', 'New York', 'San Francisco'];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction GeneralSettings({ user, className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { successSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        name: user.name || '',\n        email: user.email || '',\n        password: user.password || ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .max(255)\n          .required('Name is required'),\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255)\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Must be at least 6 characters')\n          .max(255)\n      })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          dispatch(updateProfile(user.id, values));\n          setStatus({ success: true });\n          setSubmitting(false);\n          successSnackbar('User updated');\n        } catch (error) {\n          console.error(error);\n          setStatus({ success: false });\n          setErrors({ submit: error.response.data.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              {errors.submit && (\n                <Box mb={3}>\n                  <Alert severity=\"error\">{errors.submit}</Alert>\n                </Box>\n              )}\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                  Update User\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport ProfileDetails from './ProfileDetails';\nimport GeneralSettings from './GeneralSettings';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction General({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <ProfileDetails user={user} />\n      </Grid>\n      <Grid item lg={8} md={6} xl={9} xs={12}>\n        <GeneralSettings user={user} />\n      </Grid>\n    </Grid>\n  );\n}\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, { useState } from 'react';\nimport { Box, Container, Divider, Tab, Tabs, makeStyles } from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Header from './Header';\nimport General from './General';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction AccountView() {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Settings\">\n      <Container maxWidth=\"lg\">\n        <Header />\n        <General />\n      </Container>\n    </Page>\n  );\n}\n\nexport default AccountView;\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import { useContext } from 'react';\nimport { useSnackbar as useBaseSnackbar } from 'notistack';\n\nexport default function useSnackbar() {\n  const { enqueueSnackbar } = useBaseSnackbar();\n\n  const successSnackbar = (text) => {\n    enqueueSnackbar(text, {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  return { successSnackbar };\n}\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);"],"sourceRoot":""}