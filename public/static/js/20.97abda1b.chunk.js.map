{"version":3,"sources":["services/earnChopRuleService.js","constants/paymentTypes.js","constants/ruleTypes.js","views/earnChopRule/EarnChopRuleEdit/EarnChopRuleEditForm.js","views/earnChopRule/EarnChopRuleEdit/Header.js","views/earnChopRule/EarnChopRuleEdit/index.js","hooks/useIsMountedRef.js","utils/analytics.js","components/Page.js","hooks/useSnackbar.js","services/rankService.js","hooks/useRank.js"],"names":["earnChopRuleService","list","a","axios","get","earnChopRules","create","data","post","earnChopRule","id","update","patch","delete","paymentTypes","ruleTypes","useStyles","makeStyles","root","EarnChopRuleEditForm","className","ranks","rest","classes","successSnackbar","useSnackbar","t","useTranslation","history","useHistory","initialValues","name","description","payment_type","type","rule_unit","rule_chops","rank_id","activated_at","moment","format","expired_at","validationSchema","Yup","shape","max","required","oneOf","min","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","success","push","submit","response","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setFieldValue","clsx","Card","CardContent","Box","mb","Alert","severity","Grid","container","spacing","item","md","xs","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","value","variant","select","SelectProps","native","map","rank","key","paymentType","ruleType","DateTimePicker","date","inputVariant","mt","Button","color","disabled","Header","Breadcrumbs","separator","fontSize","aria-label","Link","to","component","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","EarnChopRuleEditView","useParams","isMountedRef","useIsMountedRef","React","useState","setEarnChopRule","useRank","getEarnChopRule","useCallback","useEffect","Page","title","Container","maxWidth","isMounted","useRef","current","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","page_path","pathname","Helmet","enqueueSnackbar","useBaseSnackbar","text","anchorOrigin","vertical","horizontal","rankService","setRanks","getRanks","deleteRank"],"mappings":"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","file":"static/js/20.97abda1b.chunk.js","sourcesContent":["import axios from '../utils/axios';\n\nclass EarnChopRuleService {\n  list = async () => {\n    const earnChopRules = await axios.get('/api/v1/earnChopRules');\n    return earnChopRules;\n  };\n\n  create = async (data) => {\n    const earnChopRule = await axios.post('/api/v1/earnChopRules', data);\n    return earnChopRule;\n  };\n\n  get = async (id) => {\n    const earnChopRule = await axios.get(`/api/v1/earnChopRules/${id}`);\n    return earnChopRule;\n  };\n\n  update = async (id, data) => {\n    const earnChopRule = await axios.patch(`/api/v1/earnChopRules/${id}`, data);\n    return earnChopRule;\n  };\n\n  delete = async (id) => {\n    const earnChopRule = await axios.delete(`/api/v1/earnChopRules/${id}`);\n    return earnChopRule;\n  };\n}\n\nconst earnChopRuleService = new EarnChopRuleService();\n\nexport default earnChopRuleService;\n","// eslint-disable-next-line import/prefer-default-export\nexport const paymentTypes = ['ALL', 'LINE_PAY', 'CASH'];\n","// eslint-disable-next-line import/prefer-default-export\nexport const ruleTypes = ['AMOUNT', 'ITEM_COUNT'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router';\nimport useSnackbar from '../../../hooks/useSnackbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { Alert } from '@material-ui/lab';\nimport { paymentTypes } from '../../../constants/paymentTypes';\nimport { ruleTypes } from '../../../constants/ruleTypes';\nimport { useTranslation } from 'react-i18next';\nimport earnChopRuleService from '../../../services/earnChopRuleService';\nimport moment from 'moment-timezone';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction EarnChopRuleEditForm({ className, earnChopRule, ranks, ...rest }) {\n  const classes = useStyles();\n  const { successSnackbar } = useSnackbar();\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <Formik\n      initialValues={{\n        name: earnChopRule.name || '',\n        description: earnChopRule.description || '',\n        payment_type: earnChopRule.payment_type || 'ALL',\n        type: earnChopRule.type || 'AMOUNT',\n        rule_unit: earnChopRule.rule_unit || 1,\n        rule_chops: earnChopRule.rule_chops || 1,\n        rank_id: earnChopRule.rank_id || '',\n        activated_at: moment(earnChopRule.activated_at ? earnChopRule.activated_at : '').format(\n          'YYYY-MM-DD HH:mm:ss'\n        ),\n        expired_at: moment(earnChopRule.expired_at ? earnChopRule.expired_at : '').format(\n          'YYYY-MM-DD HH:mm:ss'\n        )\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Name') })),\n        description: Yup.string().max(255),\n        payment_type: Yup.string().oneOf(['ALL', 'LINE_PAY', 'CASH']),\n        type: Yup.string().oneOf(['AMOUNT', 'ITEM_COUNT']),\n        rule_unit: Yup.number().min(1),\n        rule_chops: Yup.number().min(0)\n      })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          await await earnChopRuleService.update(earnChopRule.id, {\n            ...values,\n            id: earnChopRule.id\n          });\n          setStatus({ success: true });\n          setSubmitting(false);\n          successSnackbar(t('Updated', { name: t('Earn Chop Rule') }));\n          history.push('/earnChopRules');\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.response.data.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n        setFieldValue\n      }) => (\n        <form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              {errors.submit && (\n                <Box mb={3}>\n                  <Alert severity=\"error\">{errors.submit}</Alert>\n                </Box>\n              )}\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label={t('Name')}\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.description && errors.description)}\n                    fullWidth\n                    helperText={touched.description && errors.description}\n                    label={t('Description')}\n                    name=\"description\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.description}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Rank')}\n                    name=\"rank_id\"\n                    onChange={handleChange}\n                    select\n                    required\n                    SelectProps={{ native: true }}\n                    value={values.rank_id}\n                    variant=\"outlined\"\n                  >\n                    {ranks.map((rank) => (\n                      <option key={rank.id} value={rank.id}>\n                        {rank.name}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Payment Type')}\n                    name=\"payment_type\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.payment_type}\n                    variant=\"outlined\"\n                  >\n                    {paymentTypes.map((paymentType) => (\n                      <option key={paymentType} value={paymentType}>\n                        {t(`PaymentType.${paymentType}`)}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Type')}\n                    name=\"type\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.type}\n                    variant=\"outlined\"\n                  >\n                    {ruleTypes.map((ruleType) => (\n                      <option key={ruleType} value={ruleType}>\n                        {t(`Type.${ruleType}`)}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={12} xs={12} />\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.rule_unit && errors.rule_unit)}\n                    fullWidth\n                    helperText={touched.rule_unit && errors.rule_unit}\n                    label={t('Rule Unit')}\n                    name=\"rule_unit\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.rule_unit}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.rule_chops && errors.rule_chops)}\n                    fullWidth\n                    helperText={touched.rule_chops && errors.rule_chops}\n                    label={t('Rule Chops')}\n                    name=\"rule_chops\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.rule_chops}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={12} xs={12} />\n                <Grid item md={6} xs={12}>\n                  <DateTimePicker\n                    error={Boolean(touched.activated_at && errors.activated_at)}\n                    fullWidth\n                    helperText={touched.activated_at && errors.activated_at}\n                    value={values.activated_at}\n                    label={t('Activated At')}\n                    name=\"activated_at\"\n                    onBlur={handleBlur}\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                    required\n                    onChange={(date) =>\n                      setFieldValue('activated_at', moment(date).format('YYYY-MM-DD HH:mm:ss'))\n                    }\n                    inputVariant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <DateTimePicker\n                    error={Boolean(touched.expired_at && errors.expired_at)}\n                    fullWidth\n                    helperText={touched.expired_at && errors.expired_at}\n                    value={values.expired_at}\n                    label={t('Expired At')}\n                    name=\"expired_at\"\n                    onBlur={handleBlur}\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                    required\n                    onChange={(date) =>\n                      setFieldValue('expired_at', moment(date).format('YYYY-MM-DD HH:mm:ss'))\n                    }\n                    inputVariant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                  {t('Submit')}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nEarnChopRuleEditForm.propTypes = {\n  className: PropTypes.string,\n  earnChopRule: PropTypes.object.isRequired,\n  ranks: PropTypes.array.isRequired\n};\n\nexport default EarnChopRuleEditForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Breadcrumbs, Link, Typography, makeStyles } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link variant=\"body1\" color=\"inherit\" to=\"/\" component={RouterLink}>\n          {t('Dashboard')}\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/earnChopRules\"\n          component={RouterLink}\n        >\n          {t('Earn Chop Rule List')}\n        </Link>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          {t('Edit Earn Chop Rules')}\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        {t('Edit Earn Chop Rules')}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport useRank from '../../../hooks/useRank';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport EarnChopRuleEditForm from './EarnChopRuleEditForm';\nimport Header from './Header';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport earnChopRuleService from '../../../services/earnChopRuleService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction EarnChopRuleEditView() {\n  const { id } = useParams();\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnChopRule, setEarnChopRule] = React.useState();\n  const { ranks } = useRank();\n  const { t } = useTranslation();\n\n  const getEarnChopRule = useCallback(async () => {\n    const data = await earnChopRuleService.get(id);\n    setEarnChopRule(data.data.data);\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnChopRule();\n  }, [getEarnChopRule]);\n\n  if (!earnChopRule) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title={t('Edit Earn Chop Rules')}>\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <EarnChopRuleEditForm earnChopRule={earnChopRule} ranks={ranks} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default EarnChopRuleEditView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useContext } from 'react';\nimport { useSnackbar as useBaseSnackbar } from 'notistack';\n\nexport default function useSnackbar() {\n  const { enqueueSnackbar } = useBaseSnackbar();\n\n  const successSnackbar = (text) => {\n    enqueueSnackbar(text, {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  return { successSnackbar };\n}\n","import axios from '../utils/axios';\n\nclass RankService {\n  list = async () => {\n    const ranks = await axios.get('/api/v1/ranks');\n    return ranks;\n  };\n\n  create = async (data) => {\n    const rank = await axios.post('/api/v1/ranks', data);\n    return rank;\n  };\n\n  get = async (id) => {\n    const rank = await axios.get(`/api/v1/ranks/${id}`);\n    return rank;\n  };\n\n  update = async (id, data) => {\n    const rank = await axios.patch(`/api/v1/ranks/${id}`, data);\n    return rank;\n  };\n\n  delete = async (id) => {\n    const rank = await axios.delete(`/api/v1/ranks/${id}`);\n    return rank;\n  };\n}\n\nconst rankService = new RankService();\n\nexport default rankService;\n","import { useState, useEffect, useCallback } from 'react';\nimport useIsMountedRef from './useIsMountedRef';\nimport rankService from '../services/rankService';\n\nexport default function useRank() {\n  const [ranks, setRanks] = useState([]);\n  const isMountedRef = useIsMountedRef();\n\n  const getRanks = useCallback(async () => {\n    const data = await rankService.list();\n    setRanks(data.data.data);\n  }, [isMountedRef]);\n\n  const deleteRank = useCallback(\n    async (id) => {\n      await rankService.delete(id);\n      getRanks();\n    },\n    [getRanks]\n  );\n\n  useEffect(() => {\n    getRanks();\n  }, [getRanks]);\n\n  return { ranks, deleteRank };\n}\n"],"sourceRoot":""}