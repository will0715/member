{"version":3,"sources":["hooks/useMember.js","hooks/useBranch.js","components/FormikAutocomplete.js","views/chops/AddChops/Header.js","services/chopService.js","views/chops/AddChops/AddChopsForm.js","views/chops/AddChops/index.js","hooks/useIsMountedRef.js","utils/analytics.js","components/Page.js","hooks/useSnackbar.js","services/memberService.js","services/branchService.js"],"names":["useMember","useState","members","setMembers","isMountedRef","useIsMountedRef","language","useTranslation","i18n","getMembers","useCallback","a","memberService","list","data","deleteMember","id","delete","getMemberFullName","member","last_name","first_name","useEffect","useBranch","branches","setBranches","getBranches","branchService","deleteBranch","FormikAutocomplete","textFieldProps","props","label","required","variant","name","getOptionLabel","renderInput","input","useStyles","makeStyles","root","Header","className","rest","classes","t","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","color","to","component","RouterLink","Typography","chopService","add","axios","post","chops","AddChopsForm","successSnackbar","useSnackbar","length","initialValues","branch","validationSchema","Yup","shape","min","onSubmit","values","setErrors","setStatus","setSubmitting","phone","branch_id","code","success","submit","response","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setFieldValue","Card","CardContent","Box","mb","Alert","severity","Grid","container","spacing","item","md","xs","options","option","value","onBlur","onChange","_","TextField","error","Boolean","fullWidth","helperText","type","mt","Button","disabled","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","AddChops","Page","title","Container","maxWidth","isMounted","useRef","current","track","window","gtag","pageview","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","page_path","pathname","Helmet","enqueueSnackbar","useBaseSnackbar","text","anchorOrigin","vertical","horizontal","get","create","update","patch","detail"],"mappings":"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","file":"static/js/15.68afed38.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useIsMountedRef from './useIsMountedRef';\nimport memberService from '../services/memberService';\n\nexport default function useMember() {\n  const [members, setMembers] = useState([]);\n  const isMountedRef = useIsMountedRef();\n  const { i18n } = useTranslation();\n  const { language } = i18n;\n\n  const getMembers = useCallback(async () => {\n    const data = await memberService.list();\n    setMembers(data.data.data);\n  }, [isMountedRef]);\n\n  const deleteMember = useCallback(\n    async (id) => {\n      await memberService.delete(id);\n      getMembers();\n    },\n    [getMembers]\n  );\n\n  const getMemberFullName = useCallback(\n    (member) => {\n      switch (language) {\n        case 'zh-TW':\n        case 'zh-ZN':\n          return `${member.last_name}${member.first_name}`;\n        default:\n          return `${member.first_name} ${member.last_name}`;\n      }\n    },\n    [language]\n  );\n\n  useEffect(() => {\n    getMembers();\n  }, [getMembers]);\n\n  return { members, deleteMember, getMemberFullName };\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport useIsMountedRef from './useIsMountedRef';\nimport branchService from '../services/branchService';\n\nexport default function useBranch() {\n  const [branches, setBranches] = useState([]);\n  const isMountedRef = useIsMountedRef();\n\n  const getBranches = useCallback(async () => {\n    const data = await branchService.list();\n    setBranches(data.data.data);\n  }, [isMountedRef]);\n\n  const deleteBranch = useCallback(\n    async (id) => {\n      await branchService.delete(id);\n      getBranches();\n    },\n    [getBranches]\n  );\n\n  useEffect(() => {\n    getBranches();\n  }, [getBranches]);\n\n  return { branches, deleteBranch };\n}\n","import React from 'react';\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField } from '@material-ui/core';\n\nconst FormikAutocomplete = ({ textFieldProps, ...props }) => {\n  const { label, required, variant } = props;\n  const { name, getOptionLabel } = props;\n\n  return (\n    <Autocomplete\n      {...props}\n      renderInput={(input) => <TextField {...input} {...textFieldProps} />}\n    />\n  );\n};\n\nexport default FormikAutocomplete;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Breadcrumbs, Link, Typography, makeStyles } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link variant=\"body1\" color=\"inherit\" to=\"/\" component={RouterLink}>\n          {t('Dashboard')}\n        </Link>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          {t('Add Chops')}\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        {t('Add Chops')}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import axios from '../utils/axios';\n\nclass ChopService {\n  add = async (data) => {\n    const chops = await axios.post('/api/v1/chops/add', data);\n    return chops;\n  };\n}\n\nconst chopService = new ChopService();\n\nexport default chopService;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Card, CardContent, Grid, TextField, makeStyles } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport useSnackbar from '../../../hooks/useSnackbar';\nimport Autocomplete from '../../../components/FormikAutocomplete';\nimport chopService from '../../../services/chopService';\nimport useMember from '../../../hooks/useMember';\nimport useBranch from '../../../hooks/useBranch';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction AddChopsForm({ className, ...rest }) {\n  const classes = useStyles();\n  const { successSnackbar } = useSnackbar();\n  const { t } = useTranslation();\n  const { members, getMemberFullName } = useMember();\n  const { branches } = useBranch();\n\n  if (!members.length) {\n    return null;\n  }\n\n  if (!branches.length) {\n    return null;\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        member: members[0],\n        branch: branches[0],\n        chops: 0\n      }}\n      validationSchema={Yup.object().shape({\n        member: Yup.object().required(),\n        branch: Yup.object().required(),\n        chops: Yup.number()\n          .min(1)\n          .required(t('is required', { name: t('Chops') }))\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await chopService.add({\n            ...values,\n            phone: values.member.phone,\n            branch_id: values.branch.code\n          });\n          setStatus({ success: true });\n          setSubmitting(false);\n          successSnackbar(t('Chops added'));\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.response.data.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n        setFieldValue\n      }) => (\n        <form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              {errors.submit && (\n                <Box mb={3}>\n                  <Alert severity=\"error\">{errors.submit}</Alert>\n                </Box>\n              )}\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <Autocomplete\n                    options={members}\n                    getOptionLabel={(option) => getMemberFullName(option)}\n                    value={values.member}\n                    onBlur={handleBlur}\n                    name=\"member\"\n                    onChange={(_, value) => setFieldValue('member', value)}\n                    textFieldProps={{ required: true, variant: 'outlined', label: t('Member') }}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Autocomplete\n                    options={branches}\n                    getOptionLabel={(option) => `${option.name}`}\n                    value={values.branch}\n                    onBlur={handleBlur}\n                    name=\"branch\"\n                    onChange={(_, value) => setFieldValue('branch', value)}\n                    textFieldProps={{ required: true, variant: 'outlined', label: t('Branch') }}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.chops && errors.chops)}\n                    fullWidth\n                    helperText={touched.chops && errors.chops}\n                    label={t('Chops')}\n                    name=\"chops\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.chops}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                  {t('Submit')}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nAddChopsForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AddChopsForm;\n","import React from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport Page from '../../../components/Page';\nimport Header from './Header';\nimport AddChopsForm from './AddChopsForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction AddChops() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Page className={classes.root} title={t('Add Chops')}>\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <AddChopsForm />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default AddChops;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useContext } from 'react';\nimport { useSnackbar as useBaseSnackbar } from 'notistack';\n\nexport default function useSnackbar() {\n  const { enqueueSnackbar } = useBaseSnackbar();\n\n  const successSnackbar = (text) => {\n    enqueueSnackbar(text, {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  return { successSnackbar };\n}\n","import axios from '../utils/axios';\n\nclass MemberService {\n  list = async () => {\n    const members = await axios.get('/api/v1/members');\n    return members;\n  };\n\n  create = async (data) => {\n    const member = await axios.post('/api/v1/members', data);\n    return member;\n  };\n\n  get = async (id) => {\n    const member = await axios.get(`/api/v1/members/${id}`);\n    return member;\n  };\n\n  update = async (id, data) => {\n    const member = await axios.patch(`/api/v1/members/${id}`, data);\n    return member;\n  };\n\n  delete = async (id) => {\n    const member = await axios.delete(`/api/v1/members/${id}`);\n    return member;\n  };\n\n  detail = async (id) => {\n    const member = await axios.get(`/api/v1/members/${id}/detail`);\n    return member;\n  };\n}\n\nconst memberService = new MemberService();\n\nexport default memberService;\n","import axios from '../utils/axios';\n\nclass BranchService {\n  list = async () => {\n    const branches = await axios.get('/api/v1/branches');\n    return branches;\n  };\n\n  create = async (data) => {\n    const branch = await axios.post('/api/v1/branches', data);\n    return branch;\n  };\n\n  get = async (id) => {\n    const branch = await axios.get(`/api/v1/branches/${id}`);\n    return branch;\n  };\n\n  update = async (id, data) => {\n    const branch = await axios.patch(`/api/v1/branches/${id}`, data);\n    return branch;\n  };\n\n  delete = async (id) => {\n    const branch = await axios.delete(`/api/v1/branches/${id}`);\n    return branch;\n  };\n}\n\nconst branchService = new BranchService();\n\nexport default branchService;\n"],"sourceRoot":""}