{"version":3,"sources":["../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js"],"names":["createSvgIcon","React","d","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","props","ref","action","children","classes","className","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","root","concat","capitalize","message","IconButton","size","title","onClick","withStyles","theme","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","flexDirection","justifyContent","alignItems","marginLeft","paddingLeft","name","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","arguments","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","_config$startAfter","startAfter","stringify","_config$trim","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","freeSolo","getOptionDisabled","_props$getOptionLabel","x","_props$getOptionSelec","getOptionSelected","value","groupBy","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onChange","onInputChange","onOpen","openProp","open","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","_React$useState","defaultId","setDefaultId","Math","round","random","ignoreFocus","firstFocus","inputRef","listboxRef","_React$useState2","anchorEl","setAnchorEl","_React$useState3","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setHighlightedIndex","useEventCallback","index","mouse","current","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValue","isInputValueControlled","_React$useState4","inputValueState","setInputValue","_React$useState5","focused","setFocused","resetInputValue","event","newValue","newInputValue","optionLabel","isOpenControlled","_React$useState6","openState","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","focus","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","valueItem","currentOption","val","itemIndex","optionItem","handleOpen","handleClose","reason","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","_toConsumableArray","push","splice","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","key","preventDefault","which","stopPropagation","onKeyDown","handleFocus","handleBlur","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handleListboxRef","node","setRef","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref2","onDelete","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","propTypes","PropTypes","bool","object","any","func","DisablePortal","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$getLimitTagsTe","getLimitTagsText","more","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","_useAutocomplete","getCustomizedTagProps","params","tag","tagSizeSmall","map","Chip","label","ListSubheader","groupLabel","component","groupUl","renderListOption","optionProps","hasClearIcon","hasPopupIcon","fullWidth","InputLabelProps","InputProps","inputRoot","endAdornment","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","style","width","clientWidth","paper","noOptions","listbox","option2","index2","_option","visibility","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","right","paddingTop","flexGrow","textOverflow","position","top","transform","zIndex","modal","body1","overflow","listStyle","maxHeight","text","secondary","minHeight","cursor","boxSizing","outline","WebkitTapHighlightColor","_defineProperty","breakpoints","up","hover","disabledOpacity","pointerEvents","background","_interopRequireDefault","require","Object","defineProperty","exports","_react","_default","createElement"],"mappings":"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","file":"static/js/5.e8510483.chunk.js","sourcesContent":["import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback, useControlled } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$startAfter = config.startAfter,\n      startAfter = _config$startAfter === void 0 ? 0 : _config$startAfter,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    if (startAfter > 0 && input.length <= startAfter) {\n      return [];\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var setHighlightedIndex = useEventCallback(function (index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _React$useRef = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(''),\n      inputValueState = _React$useState4[0],\n      setInputValue = _React$useState4[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState5 = React.useState(false),\n      focused = _React$useState5[0],\n      setFocused = _React$useState5[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n          console.error(\"Material-UI: the `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(newValue), \".\"));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef2 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef2.current;\n\n  var _React$useState6 = React.useState(false),\n      openState = _React$useState6[0],\n      setOpenState = _React$useState6[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: the value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = useEventCallback(function (diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  React.useEffect(function () {\n    if (!open) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex('reset', 'next');\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n      setHighlightedIndex(itemIndex);\n      return;\n    } // Keep the index in the boundaries\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex(filteredOptions.length - 1);\n    } // Ignore filterOptions => options, getOptionSelected, getOptionLabel)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [value, open, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, inputValue, multiple]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: the `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            if (disabled) {\n              return;\n            } // We don't want to validate the form.\n\n\n            event.preventDefault();\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Automatically select the first option as the listbox become visible.\n\n\n    if (highlightedIndexRef.current === -1 && autoHighlight) {\n      changeHighlightedIndex('reset', 'next');\n    } else {\n      // Restore the focus to the correct option.\n      setHighlightedIndex(highlightedIndexRef.current);\n    }\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '') {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: the options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * The component name that is using this hook. Used for warnings.\n   */\n  componentName: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change).\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&:hover $clearIndicatorDirty, &$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0px',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (limitTags && !focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.any, PropTypes.array]),\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected.\n   * Uses strict equality by default.\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: PropTypes.number,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} value\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.oneOfType([PropTypes.any, PropTypes.array])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"sourceRoot":""}