{"version":3,"sources":["constants/paymentTypes.js","constants/ruleTypes.js","views/consumeChopRule/ConsumeChopRuleCreate/ConsumeChopRuleCreateForm.js","views/consumeChopRule/ConsumeChopRuleCreate/Header.js","views/consumeChopRule/ConsumeChopRuleCreate/index.js","hooks/useIsMountedRef.js","utils/analytics.js","components/Page.js","services/rankService.js","hooks/useRank.js","services/consumeChopRuleService.js"],"names":["paymentTypes","ruleTypes","useStyles","makeStyles","root","ConsumeChopRuleCreateForm","className","ranks","rest","classes","enqueueSnackbar","useSnackbar","t","useTranslation","initialValues","name","description","payment_type","type","chops_per_unit","unit_per_amount","consume_max_percentage","earn_chops_after_consume","rank_id","id","activated_at","moment","format","expired_at","validationSchema","Yup","shape","max","required","oneOf","min","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","consumeChopRuleService","create","success","variant","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setFieldValue","clsx","Card","CardContent","Box","mb","Alert","severity","Grid","container","spacing","item","md","xs","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","value","select","SelectProps","native","map","rank","key","paymentType","ruleType","DateTimePicker","date","inputVariant","Typography","color","Switch","checked","edge","mt","Button","disabled","Header","Breadcrumbs","separator","fontSize","aria-label","Link","to","component","RouterLink","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","ConsumeChopRuleEditView","useRank","length","Page","title","Container","maxWidth","useIsMountedRef","isMounted","useRef","useEffect","current","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","Helmet","rankService","list","axios","get","data","post","update","patch","delete","useState","setRanks","isMountedRef","getRanks","deleteRank","consumeChopRules","consumeChopRule"],"mappings":"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","file":"static/js/15.ce7553d8.chunk.js","sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const paymentTypes = ['ALL', 'LINE_PAY', 'CASH'];\n","// eslint-disable-next-line import/prefer-default-export\nexport const ruleTypes = ['AMOUNT', 'ITEM_COUNT'];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { Alert } from '@material-ui/lab';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { paymentTypes } from '../../../constants/paymentTypes';\nimport { ruleTypes } from '../../../constants/ruleTypes';\nimport moment from 'moment-timezone';\nimport { useTranslation } from 'react-i18next';\nimport consumeChopRuleService from '../../../services/consumeChopRuleService';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction ConsumeChopRuleCreateForm({ className, ranks, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { t } = useTranslation();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        description: '',\n        payment_type: 'ALL',\n        type: 'AMOUNT',\n        chops_per_unit: 1,\n        unit_per_amount: 1,\n        consume_max_percentage: 100,\n        earn_chops_after_consume: false,\n        rank_id: ranks[0].id,\n        activated_at: moment().format('YYYY-MM-DD HH:mm:ss'),\n        expired_at: moment().format('YYYY-MM-DD HH:mm:ss')\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Name') })),\n        description: Yup.string().max(255),\n        payment_type: Yup.string().oneOf(['ALL', 'LINE_PAY', 'CASH']),\n        type: Yup.string().oneOf(['AMOUNT', 'ITEM_COUNT']),\n        chops_per_unit: Yup.number().min(1),\n        unit_per_amount: Yup.number().min(0),\n        consume_max_percentage: Yup.number()\n          .max(100)\n          .min(1),\n        earn_chops_after_consume: Yup.bool()\n      })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          await await consumeChopRuleService.create({\n            ...values\n          });\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar(t('Created', { name: t('Consume Chop Rule') }), {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n        setFieldValue\n      }) => (\n        <form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              {errors.submit && (\n                <Box mb={3}>\n                  <Alert severity=\"error\">{errors.submit}</Alert>\n                </Box>\n              )}\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label={t('Name')}\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.description && errors.description)}\n                    fullWidth\n                    helperText={touched.description && errors.description}\n                    label={t('Description')}\n                    name=\"description\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.description}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Rank')}\n                    name=\"rank_id\"\n                    onChange={handleChange}\n                    select\n                    required\n                    SelectProps={{ native: true }}\n                    value={values.rank_id}\n                    variant=\"outlined\"\n                  >\n                    {ranks.map((rank) => (\n                      <option key={rank.id} value={rank.id}>\n                        {rank.name}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Payment Type')}\n                    name=\"payment_type\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.payment_type}\n                    variant=\"outlined\"\n                  >\n                    {paymentTypes.map((paymentType) => (\n                      <option key={paymentType} value={paymentType}>\n                        {t(`PaymentType.${paymentType}`)}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Type')}\n                    name=\"type\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.type}\n                    variant=\"outlined\"\n                  >\n                    {ruleTypes.map((ruleType) => (\n                      <option key={ruleType} value={ruleType}>\n                        {t(`Type.${ruleType}`)}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.chops_per_unit && errors.chops_per_unit)}\n                    fullWidth\n                    helperText={touched.chops_per_unit && errors.chops_per_unit}\n                    label={t('Chops Per Unit')}\n                    name=\"chops_per_unit\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.chops_per_unit}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.unit_per_amount && errors.unit_per_amount)}\n                    fullWidth\n                    helperText={touched.unit_per_amount && errors.unit_per_amount}\n                    label={t('Unit Per Amount')}\n                    name=\"unit_per_amount\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.unit_per_amount}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.consume_max_percentage && errors.consume_max_percentage)}\n                    fullWidth\n                    helperText={touched.consume_max_percentage && errors.consume_max_percentage}\n                    label={t('Consume Max Percentage')}\n                    name=\"consume_max_percentage\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.consume_max_percentage}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={12} xs={12} />\n                <Grid item md={6} xs={12}>\n                  <DateTimePicker\n                    error={Boolean(touched.activated_at && errors.activated_at)}\n                    fullWidth\n                    helperText={touched.activated_at && errors.activated_at}\n                    value={values.activated_at}\n                    label={t('Activated At')}\n                    name=\"activated_at\"\n                    onBlur={handleBlur}\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                    required\n                    onChange={(date) =>\n                      setFieldValue('activated_at', moment(date).format('YYYY-MM-DD HH:mm:ss'))\n                    }\n                    inputVariant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <DateTimePicker\n                    error={Boolean(touched.expired_at && errors.expired_at)}\n                    fullWidth\n                    helperText={touched.expired_at && errors.expired_at}\n                    value={values.expired_at}\n                    label={t('Expired At')}\n                    name=\"expired_at\"\n                    onBlur={handleBlur}\n                    format=\"YYYY-MM-DD HH:mm:ss\"\n                    required\n                    onChange={(date) =>\n                      setFieldValue('expired_at', moment(date).format('YYYY-MM-DD HH:mm:ss'))\n                    }\n                    inputVariant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    {t('Earn Chops After Consume')}\n                  </Typography>\n                  <Switch\n                    checked={values.earn_chops_after_consume}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"earn_chops_after_consume\"\n                    onChange={handleChange}\n                    value={values.earn_chops_after_consume}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                  {t('Submit')}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nConsumeChopRuleCreateForm.propTypes = {\n  className: PropTypes.string,\n  ranks: PropTypes.array.isRequired\n};\n\nexport default ConsumeChopRuleCreateForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Breadcrumbs, Link, Typography, makeStyles } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link variant=\"body1\" color=\"inherit\" to=\"/\" component={RouterLink}>\n          {t('Dashboard')}\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/consumeChopRules\"\n          component={RouterLink}\n        >\n          {t('Consume Chop Rule List')}\n        </Link>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          {t('Create Consume Chop Rules')}\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        {t('Create Consume Chop Rules')}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport useRank from '../../../hooks/useRank';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport ConsumeChopRuleCreateForm from './ConsumeChopRuleCreateForm';\nimport Header from './Header';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport consumeChopRuleService from '../../../services/consumeChopRuleService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction ConsumeChopRuleEditView() {\n  const classes = useStyles();\n  const { ranks } = useRank();\n  const { t } = useTranslation();\n\n  if (!ranks.length) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title={t('Create Consume Chop Rules')}>\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <ConsumeChopRuleCreateForm ranks={ranks} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ConsumeChopRuleEditView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import axios from '../utils/axios';\n\nclass RankService {\n  list = async () => {\n    const ranks = await axios.get('/api/v1/ranks');\n    return ranks;\n  };\n\n  create = async (data) => {\n    const rank = await axios.post('/api/v1/ranks', data);\n    return rank;\n  };\n\n  get = async (id) => {\n    const rank = await axios.get(`/api/v1/ranks/${id}`);\n    return rank;\n  };\n\n  update = async (id, data) => {\n    const rank = await axios.patch(`/api/v1/ranks/${id}`, data);\n    return rank;\n  };\n\n  delete = async (id) => {\n    const rank = await axios.delete(`/api/v1/ranks/${id}`);\n    return rank;\n  };\n}\n\nconst rankService = new RankService();\n\nexport default rankService;\n","import { useState, useEffect, useCallback } from 'react';\nimport useIsMountedRef from './useIsMountedRef';\nimport rankService from '../services/rankService';\n\nexport default function useRank() {\n  const [ranks, setRanks] = useState([]);\n  const isMountedRef = useIsMountedRef();\n\n  const getRanks = useCallback(async () => {\n    const data = await rankService.list();\n    setRanks(data.data.data);\n  }, [isMountedRef]);\n\n  const deleteRank = useCallback(\n    async (id) => {\n      await rankService.delete(id);\n      getRanks();\n    },\n    [getRanks]\n  );\n\n  useEffect(() => {\n    getRanks();\n  }, [getRanks]);\n\n  return { ranks, deleteRank };\n}\n","import axios from '../utils/axios';\n\nclass ConsumeChopRuleService {\n  list = async () => {\n    const consumeChopRules = await axios.get('/api/v1/consumeChopRules');\n    return consumeChopRules;\n  };\n\n  create = async (data) => {\n    const consumeChopRule = await axios.post('/api/v1/consumeChopRules', data);\n    return consumeChopRule;\n  };\n\n  get = async (id) => {\n    const consumeChopRule = await axios.get(`/api/v1/consumeChopRules/${id}`);\n    return consumeChopRule;\n  };\n\n  update = async (id, data) => {\n    const consumeChopRule = await axios.patch(`/api/v1/consumeChopRules/${id}`, data);\n    return consumeChopRule;\n  };\n\n  delete = async (id) => {\n    const consumeChopRule = await axios.delete(`/api/v1/consumeChopRules/${id}`);\n    return consumeChopRule;\n  };\n}\n\nconst consumeChopRuleService = new ConsumeChopRuleService();\n\nexport default consumeChopRuleService;\n"],"sourceRoot":""}