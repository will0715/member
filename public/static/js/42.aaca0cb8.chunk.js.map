{"version":3,"sources":["views/pages/Error404View.js","utils/analytics.js","components/Page.js"],"names":["useStyles","makeStyles","theme","root","backgroundColor","palette","background","dark","minHeight","display","alignItems","padding","spacing","paddingTop","paddingBottom","image","maxWidth","width","maxHeight","height","Error404View","classes","useTheme","mobileDevice","useMediaQuery","breakpoints","down","className","title","align","variant","color","mt","justifyContent","alt","src","component","RouterLink","to","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","type","Page","forwardRef","ref","children","rest","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet"],"mappings":"0HAAA,yGAaMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,KAC1CC,UAAW,OACXC,QAAS,OACTC,WAAY,SACZC,QAAST,EAAMU,QAAQ,GACvBC,WAAY,GACZC,cAAe,IAEjBC,MAAO,CACLC,SAAU,OACVC,MAAO,IACPC,UAAW,IACXC,OAAQ,YAoCGC,UAhCf,WACE,IAAMC,EAAUrB,IACVE,EAAQoB,cACRC,EAAeC,YAActB,EAAMuB,YAAYC,KAAK,OAE1D,OACE,kBAAC,IAAD,CAAMC,UAAWN,EAAQlB,KAAMyB,MAAM,kBACnC,kBAAC,IAAD,CAAWZ,SAAS,MAClB,kBAAC,IAAD,CAAYa,MAAM,SAASC,QAASP,EAAe,KAAO,KAAMQ,MAAM,eAAtE,qDAGA,kBAAC,IAAD,CAAYF,MAAM,SAASC,QAAQ,YAAYC,MAAM,iBAArD,6GAIA,kBAAC,IAAD,CAAKC,GAAI,EAAGvB,QAAQ,OAAOwB,eAAe,UACxC,yBACEC,IAAI,oBACJP,UAAWN,EAAQN,MACnBoB,IAAI,mDAGR,kBAAC,IAAD,CAAKH,GAAI,EAAGvB,QAAQ,OAAOwB,eAAe,UACxC,kBAAC,IAAD,CAAQF,MAAM,YAAYK,UAAWC,IAAYC,GAAG,IAAIR,QAAQ,YAAhE,qB,+ECtDV,SAASS,IAAgB,IAAD,EAKjBC,OAAOC,OAIZ,EAAAD,QAAOC,KAAP,mBAWa,OACbC,SATF,SAAkBC,GAChBJ,EAAM,SAAUK,8LAAYC,4BAA6BF,IASzDG,MANF,SAAeC,EAAMJ,GACnBJ,EAAM,QAASQ,EAAMJ,KCXjBK,EAAOC,sBAAW,WAA+BC,GAAS,IAArCtB,EAAoC,EAApCA,MAAOuB,EAA6B,EAA7BA,SAAaC,EAAgB,oCACvDC,EAAWC,cAEXC,EAAoBC,uBAAY,WACpCjB,EAAMG,SAAS,CACbe,UAAWJ,EAASK,aAErB,CAACL,IAMJ,OAJAM,qBAAU,WACRJ,MACC,CAACA,IAGF,uCAAKL,IAAKA,GAASE,GACjB,kBAACQ,EAAA,OAAD,KACE,+BAAQhC,IAETuB,MAUQH","file":"static/js/42.aaca0cb8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Container,\n  Typography,\n  useTheme,\n  useMediaQuery,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(3),\n    paddingTop: 80,\n    paddingBottom: 80\n  },\n  image: {\n    maxWidth: '100%',\n    width: 560,\n    maxHeight: 300,\n    height: 'auto'\n  }\n}));\n\nfunction Error404View() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <Page className={classes.root} title=\"404: Not found\">\n      <Container maxWidth=\"lg\">\n        <Typography align=\"center\" variant={mobileDevice ? 'h4' : 'h1'} color=\"textPrimary\">\n          404: The page you are looking for isnâ€™t here\n        </Typography>\n        <Typography align=\"center\" variant=\"subtitle2\" color=\"textSecondary\">\n          You either tried some shady route or you came here by mistake. Whichever it is, try using\n          the navigation.\n        </Typography>\n        <Box mt={6} display=\"flex\" justifyContent=\"center\">\n          <img\n            alt=\"Under development\"\n            className={classes.image}\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n          />\n        </Box>\n        <Box mt={6} display=\"flex\" justifyContent=\"center\">\n          <Button color=\"secondary\" component={RouterLink} to=\"/\" variant=\"outlined\">\n            Back to home\n          </Button>\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Error404View;\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n"],"sourceRoot":""}