{"version":3,"sources":["views/member/MemberEdit/MemberEditForm.js","views/member/MemberEdit/Header.js","views/member/MemberEdit/index.js","hooks/useIsMountedRef.js","utils/analytics.js","components/Page.js","../node_modules/@material-ui/icons/NavigateNext.js","hooks/useSnackbar.js","services/rankService.js","hooks/useRank.js","services/memberService.js"],"names":["useStyles","makeStyles","root","MemberEditForm","className","member","ranks","rest","classes","successSnackbar","useSnackbar","t","useTranslation","history","useHistory","initialValues","email","first_name","last_name","phone","password","birthday","moment","format","address","remark","gender","rank_id","rank","id","validationSchema","Yup","shape","max","required","name","min","onSubmit","values","a","setErrors","setStatus","setSubmitting","memberService","update","success","push","submit","response","data","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","clsx","Card","CardContent","Box","mb","Alert","severity","Grid","container","spacing","item","md","xs","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","value","variant","type","select","SelectProps","native","map","key","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","mt","Button","color","disabled","Header","Breadcrumbs","separator","fontSize","aria-label","Link","to","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","MemberEditView","useParams","isMountedRef","useIsMountedRef","React","useState","setMember","useRank","getMember","useCallback","get","useEffect","length","Page","title","Container","maxWidth","isMounted","useRef","current","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","page_path","pathname","Helmet","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","enqueueSnackbar","useBaseSnackbar","text","anchorOrigin","vertical","horizontal","rankService","list","axios","create","post","patch","delete","setRanks","getRanks","deleteRank","members","detail"],"mappings":"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","file":"static/js/24.5d7b6406.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router';\nimport {\n  Box, Button, Card, CardContent, Grid, TextField, makeStyles\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment-timezone';\nimport memberService from '../../../services/memberService';\nimport useSnackbar from '../../../hooks/useSnackbar';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction MemberEditForm({\n  className, member, ranks, ...rest\n}) {\n  const classes = useStyles();\n  const { successSnackbar } = useSnackbar();\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <Formik\n      initialValues={{\n        email: member.email || '',\n        first_name: member.first_name || '',\n        last_name: member.last_name || '',\n        phone: member.phone || '',\n        password: member.password || '',\n        birthday: member.birthday ? moment(member.birthday).format('YYYY-MM-DD') : '',\n        address: member.address || '',\n        remark: member.remark || '',\n        gender: member.gender || '',\n        rank_id: member.rank.id || ''\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(t('Must be a valid email'))\n          .max(255),\n        first_name: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Name') })),\n        last_name: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Name') })),\n        phone: Yup.string().max(15),\n        password: Yup.string()\n          .min(6, t('Must be at least 6 characters'))\n          .max(255)\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await await memberService.update(member.id, {\n            ...values,\n            id: member.id\n          });\n          setStatus({ success: true });\n          setSubmitting(false);\n          successSnackbar(t('Updated', { name: t('Member') }));\n          history.push('/members');\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.response.data.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values\n      }) => (\n        <form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              {errors.submit && (\n              <Box mb={3}>\n                <Alert severity=\"error\">{errors.submit}</Alert>\n              </Box>\n              )}\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.first_name && errors.first_name)}\n                    fullWidth\n                    helperText={touched.first_name && errors.first_name}\n                    label={t('First Name')}\n                    name=\"first_name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.first_name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.last_name && errors.last_name)}\n                    fullWidth\n                    helperText={touched.last_name && errors.last_name}\n                    label={t('Last Name')}\n                    name=\"last_name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.last_name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label={t('Phone')}\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label={t('Email address')}\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label={t('Password')}\n                    name=\"password\"\n                    type=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.birthday && errors.birthday)}\n                    fullWidth\n                    helperText={touched.birthday && errors.birthday}\n                    label={t('Birthday')}\n                    name=\"birthday\"\n                    type=\"date\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.birthday}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label={t('Ranks')}\n                    name=\"rank_id\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.rank_id}\n                    variant=\"outlined\"\n                  >\n                    {ranks.map((rank) => (\n                      <option key={rank.id} value={rank.id}>\n                  {rank.name}\n                </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.address && errors.address)}\n                    fullWidth\n                    helperText={touched.address && errors.address}\n                    label={t('Address')}\n                    name=\"address\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.remark && errors.remark)}\n                    fullWidth\n                    helperText={touched.remark && errors.remark}\n                    label={t('Remark')}\n                    name=\"remark\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.remark}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                <Grid item md={6} xs={12}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">{t('Gender')}</FormLabel>\n                    <RadioGroup\n                      name=\"gender\"\n                      value={values.gender}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                    >\n                      <FormControlLabel value=\"female\" control={<Radio />} label={t('Female')} />\n                      <FormControlLabel value=\"male\" control={<Radio />} label={t('Male')} />\n                      <FormControlLabel value=\"other\" control={<Radio />} label={t('Other')} />\n                      <FormControlLabel value=\"unknown\" control={<Radio />} label={t('Unknown')} />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                  {t('Submit')}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nMemberEditForm.propTypes = {\n  className: PropTypes.string,\n  member: PropTypes.object.isRequired,\n  ranks: PropTypes.array.isRequired\n};\n\nexport default MemberEditForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs, Link, Typography, makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link variant=\"body1\" color=\"inherit\" to=\"/\" component={RouterLink}>\n          {t('Dashboard')}\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/members\"\n          component={RouterLink}\n        >\n          {t('Member List')}\n        </Link>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          {t('Edit Member')}\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        {t('Edit Member')}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport Page from '../../../components/Page';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport MemberEditForm from './MemberEditForm';\nimport Header from './Header';\nimport useRank from '../../../hooks/useRank';\nimport memberService from '../../../services/memberService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction MemberEditView() {\n  const { id } = useParams();\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [member, setMember] = React.useState();\n  const { ranks } = useRank();\n\n  const getMember = useCallback(async () => {\n    const data = await memberService.get(id);\n    setMember(data.data.data);\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getMember();\n  }, [getMember]);\n\n  if (!member) {\n    return null;\n  }\n\n  if (!ranks.length) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Member Edit\">\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <MemberEditForm member={member} ranks={ranks} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default MemberEditView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import { useContext } from 'react';\nimport { useSnackbar as useBaseSnackbar } from 'notistack';\n\nexport default function useSnackbar() {\n  const { enqueueSnackbar } = useBaseSnackbar();\n\n  const successSnackbar = (text) => {\n    enqueueSnackbar(text, {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  return { successSnackbar };\n}\n","import axios from '../utils/axios';\n\nclass RankService {\n  list = async () => {\n    const ranks = await axios.get('/api/v1/ranks');\n    return ranks;\n  };\n\n  create = async (data) => {\n    const rank = await axios.post('/api/v1/ranks', data);\n    return rank;\n  };\n\n  get = async (id) => {\n    const rank = await axios.get(`/api/v1/ranks/${id}`);\n    return rank;\n  };\n\n  update = async (id, data) => {\n    const rank = await axios.patch(`/api/v1/ranks/${id}`, data);\n    return rank;\n  };\n\n  delete = async (id) => {\n    const rank = await axios.delete(`/api/v1/ranks/${id}`);\n    return rank;\n  };\n}\n\nconst rankService = new RankService();\n\nexport default rankService;\n","import { useState, useEffect, useCallback } from 'react';\nimport useIsMountedRef from './useIsMountedRef';\nimport rankService from '../services/rankService';\n\nexport default function useRank() {\n  const [ranks, setRanks] = useState([]);\n  const isMountedRef = useIsMountedRef();\n\n  const getRanks = useCallback(async () => {\n    const data = await rankService.list();\n    setRanks(data.data.data);\n  }, [isMountedRef]);\n\n  const deleteRank = useCallback(\n    async (id) => {\n      await rankService.delete(id);\n      getRanks();\n    },\n    [getRanks, isMountedRef]\n  );\n\n  useEffect(() => {\n    getRanks();\n  }, [getRanks]);\n\n  return { ranks, deleteRank };\n}\n","import axios from '../utils/axios';\n\nclass MemberService {\n  list = async () => {\n    const members = await axios.get('/api/v1/members');\n    return members;\n  };\n\n  create = async (data) => {\n    const member = await axios.post('/api/v1/members', data);\n    return member;\n  };\n\n  get = async (id) => {\n    const member = await axios.get(`/api/v1/members/${id}`);\n    return member;\n  };\n\n  update = async (id, data) => {\n    const member = await axios.patch(`/api/v1/members/${id}`, data);\n    return member;\n  };\n\n  delete = async (id) => {\n    const member = await axios.delete(`/api/v1/members/${id}`);\n    return member;\n  };\n\n  detail = async (id) => {\n    const member = await axios.get(`/api/v1/members/${id}/detail`);\n    return member;\n  };\n}\n\nconst memberService = new MemberService();\n\nexport default memberService;\n"],"sourceRoot":""}