{"version":3,"sources":["views/reports/PrepaidcardPayment/Header.js","views/reports/PrepaidcardPayment/index.js","hooks/useIsMountedRef.js","utils/analytics.js","components/Page.js","services/reportService.js"],"names":["useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","actionIcon","marginRight","Header","className","searchRange","handleSelect","reloadData","rest","classes","t","useTranslation","start","end","React","useState","open","setOpen","handleClose","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Button","onClick","SvgIcon","format","Dialog","onClose","aria-labelledby","aria-describedby","showMonthAndYearPickers","dateDisplayFormat","ranges","startDate","toDate","endDate","key","minDate","moment","add","maxDate","onChange","DialogActions","autoFocus","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","PrepaidcardPayment","needLoad","setNeedLoad","record","setRecord","startTime","setStartTime","endTime","setEndTime","useEffect","a","reportService","prepaidcardPayment","data","fetch","columns","title","field","render","rowData","member","first_name","last_name","branch","name","code","Page","Container","maxWidth","selection","Box","mt","options","pageSize","pageSizeOptions","useIsMountedRef","isMounted","useRef","current","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","type","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","Helmet","dashboard","axios","get","prepaidcardTopup","query","chopsAdd","chopsConsume","transactions","memberRegisterBranchDetail","memberRegisterBranchStatistics"],"mappings":"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","file":"static/js/39.e482d719.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { DateRange } from 'react-date-range';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, searchRange, handleSelect, reloadData, ...rest }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { start, end } = searchRange;\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    reloadData();\n  };\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n          <Link variant=\"body1\" color=\"inherit\" to=\"/\" component={RouterLink}>\n            {t('Dashboard')}\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            {t('Prepaidcard Payment Report')}\n          </Typography>\n        </Breadcrumbs>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          {t('Prepaidcard Payment Report')}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.action}\n          onClick={handleClickOpen}\n        >\n          <SvgIcon fontSize=\"small\" className={classes.actionIcon}>\n            <CalendarIcon />\n          </SvgIcon>\n          {start.format('YYYY-MM-DD')} ~ {end.format('YYYY-MM-DD')}\n        </Button>\n      </Grid>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DateRange\n          showMonthAndYearPickers={false}\n          dateDisplayFormat=\"yyyy-MM-dd\"\n          ranges={[\n            {\n              startDate: start.toDate(),\n              endDate: end.toDate(),\n              key: 'selection'\n            }\n          ]}\n          minDate={moment()\n            .add('-1', 'years')\n            .toDate()}\n          maxDate={moment().toDate()}\n          onChange={handleSelect}\n        />\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MaterialTable from 'material-table';\nimport Page from '../../../components/Page';\nimport reportService from '../../../services/reportService';\nimport { TextField } from '@material-ui/core';\nimport { Container, Box, IconButton, SvgIcon, makeStyles } from '@material-ui/core';\nimport { Edit as EditIcon, ArrowRight as ArrowRightIcon, Trash } from 'react-feather';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport { useTranslation } from 'react-i18next';\nimport { DateRange } from 'react-date-range';\nimport Header from './Header';\nimport moment from 'moment';\n// import Results from './Results';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nexport default function PrepaidcardPayment() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [needLoad, setNeedLoad] = useState(true);\n  const [record, setRecord] = useState();\n  const [startTime, setStartTime] = useState(moment().add(-1, 'months'));\n  const [endTime, setEndTime] = useState(moment());\n\n  useEffect(() => {\n    async function fetch() {\n      const data = await reportService.prepaidcardPayment({\n        start: startTime.format('YYYY-MM-DD'),\n        end: endTime.format('YYYY-MM-DD')\n      });\n      setRecord(data.data.data);\n    }\n    if (needLoad) {\n      fetch();\n      setNeedLoad(false);\n    }\n  }, [needLoad]);\n\n  const reloadData = () => {\n    setNeedLoad(true);\n  };\n\n  const handleSelect = (ranges) => {\n    const { selection } = ranges;\n    const { startDate, endDate } = selection;\n    // if (startDate == startTime && endTime == endDate)\n    setStartTime(moment(startDate));\n    setEndTime(moment(endDate));\n  };\n\n  const columns = [\n    {\n      title: t('Member'),\n      field: 'member',\n      render: (rowData) => `${rowData.member.first_name} ${rowData.member.last_name}`\n    },\n    {\n      title: t('Branch'),\n      field: 'branch',\n      render: (rowData) => `${rowData.branch.name}(${rowData.branch.code})`\n    },\n    {\n      title: t('Time'),\n      field: 'created_at'\n    },\n    {\n      title: t('Payment'),\n      field: 'payment'\n    }\n  ];\n\n  return (\n    <Page className={classes.root} title={t('Prepaidcard Payment Report')}>\n      <Container maxWidth={false}>\n        <Header\n          searchRange={{\n            start: startTime,\n            end: endTime\n          }}\n          handleSelect={handleSelect}\n          reloadData={reloadData}\n        />\n        {record && (\n          <Box mt={3}>\n            <MaterialTable\n              title={t('Prepaidcard Payment Report')}\n              options={{\n                pageSize: 15,\n                pageSizeOptions: [15, 30, 50]\n              }}\n              columns={columns}\n              data={record}\n            />\n          </Box>\n        )}\n      </Container>\n    </Page>\n  );\n}\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import axios from '../utils/axios';\n\nclass ReportService {\n  dashboard = async () => {\n    const record = await axios.get('/api/v1/report/dashboard');\n    return record;\n  };\n\n  prepaidcardTopup = async (query) => {\n    const record = await axios.get(\n      `/api/v1/report/prepaidcards/topup?start=${query.start}&end=${query.end}`\n    );\n    return record;\n  };\n\n  prepaidcardPayment = async (query) => {\n    const record = await axios.get(\n      `/api/v1/report/prepaidcards/payment?start=${query.start}&end=${query.end}`\n    );\n    return record;\n  };\n\n  chopsAdd = async (query) => {\n    const record = await axios.get(\n      `/api/v1/report/chops/add?start=${query.start}&end=${query.end}`\n    );\n    return record;\n  };\n\n  chopsConsume = async (query) => {\n    const record = await axios.get(\n      `/api/v1/report/chops/consume?start=${query.start}&end=${query.end}`\n    );\n    return record;\n  };\n\n  transactions = async (query) => {\n    const record = await axios.get(\n      `/api/v1/report/transactions?start=${query.start}&end=${query.end}`\n    );\n    return record;\n  };\n\n  memberRegisterBranchDetail = async (query) => {\n    const record = await axios.get(\n      `/api/v1/report/memberRegisterBranch/detail?start=${query.start}&end=${query.end}`\n    );\n    return record;\n  };\n\n  memberRegisterBranchStatistics = async (query) => {\n    const record = await axios.get(\n      `/api/v1/report/memberRegisterBranch/statistics?start=${query.start}&end=${query.end}`\n    );\n    return record;\n  };\n}\n\nconst reportService = new ReportService();\n\nexport default reportService;\n"],"sourceRoot":""}