{"version":3,"sources":["../node_modules/@material-ui/icons/Lock.js","views/auth/LoginView/LoginForm.js","views/auth/LoginView/index.js","utils/analytics.js","components/Page.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","root","LoginForm","className","onSubmitSuccess","rest","classes","dispatch","useDispatch","t","useTranslation","initialValues","customer","email","password","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","login","message","response","data","success","submit","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","clsx","TextField","error","Boolean","fullWidth","autoFocus","helperText","label","margin","name","onBlur","onChange","type","variant","Box","mt","Button","color","disabled","size","FormHelperText","defaultProps","theme","justifyContent","backgroundColor","palette","background","dark","display","height","minHeight","flexDirection","paddingBottom","paddingTop","backButton","marginLeft","spacing","card","overflow","position","flexGrow","flexBasis","width","content","padding","icon","colors","green","common","white","borderRadius","top","left","media","borderTopRightRadius","borderBottomRightRadius","breakpoints","down","LoginView","history","useHistory","Page","title","Container","maxWidth","mb","alignItems","Card","CardContent","Avatar","fontSize","Typography","push","my","Divider","CardMedia","image","ml","Date","getFullYear","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","useEffect","Helmet"],"mappings":"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","file":"static/js/5.212c6fda.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');\n\nexports.default = _default;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Box, Button, TextField, FormHelperText, makeStyles } from '@material-ui/core';\nimport { login } from '../../../actions/accountActions';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction LoginForm({ className, onSubmitSuccess, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  return (\n    <Formik\n      initialValues={{\n        customer: 'poyi',\n        email: 'w67890w67890@gmail.com',\n        password: '123123'\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255)\n          .required('Email is required'),\n        password: Yup.string()\n          .max(255)\n          .required('Password is required')\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await dispatch(login(values.customer, values.email, values.password));\n          onSubmitSuccess();\n        } catch (error) {\n          const message = (error.response && error.response.data.message) || 'Something went wrong';\n\n          setStatus({ success: false });\n          setErrors({ submit: message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form\n          noValidate\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.customer && errors.customer)}\n            fullWidth\n            autoFocus\n            helperText={touched.customer && errors.customer}\n            label={t('Customer')}\n            margin=\"normal\"\n            name=\"customer\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"text\"\n            value={values.customer}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label={t('Email Address/Account')}\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label={t('Password')}\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              {t('Log In')}\n            </Button>\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n  onSubmitSuccess: PropTypes.func\n};\n\nLoginForm.defaultProps = {\n  onSubmitSuccess: () => {}\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport {\n  Avatar,\n  Button,\n  Box,\n  Container,\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Page from '../../../components/Page';\nimport Logo from '../../../components/Logo';\nimport LoginForm from './LoginForm';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'center',\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    minHeight: '100%',\n    flexDirection: 'column',\n    paddingBottom: 80,\n    paddingTop: 80\n  },\n  backButton: {\n    marginLeft: theme.spacing(2)\n  },\n  card: {\n    overflow: 'visible',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 3, 4)\n  },\n  icon: {\n    backgroundColor: colors.green[500],\n    color: theme.palette.common.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    padding: theme.spacing(3),\n    color: theme.palette.common.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  }\n}));\n\nfunction LoginView() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  const handleSubmitSuccess = () => {\n    history.push('/');\n  };\n\n  return (\n    <Page className={classes.root} title=\"Login\">\n      <Container maxWidth=\"md\">\n        <Box mb={8} display=\"flex\" alignItems=\"center\">\n          {/* <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink> */}\n        </Box>\n        <Card className={classes.card}>\n          <CardContent className={classes.content}>\n            <Avatar className={classes.icon}>\n              <LockIcon fontSize=\"large\" />\n            </Avatar>\n            <Typography variant=\"h2\" color=\"textPrimary\">\n              {t('Sign in')}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {t('Sign in on the member platform')}\n            </Typography>\n            <Box mt={3}>\n              <LoginForm onSubmitSuccess={handleSubmitSuccess} />\n            </Box>\n            <Box my={2}>\n              <Divider />\n            </Box>\n          </CardContent>\n          <CardMedia className={classes.media} image=\"/static/images/auth.png\" title=\"Cover\">\n            <Typography color=\"inherit\" variant=\"subtitle1\">\n              {t('Welcome to NoMember!')}\n            </Typography>\n            <Box alignItems=\"center\" display=\"flex\" mt={3}>\n              <Box ml={3}>\n                <Typography color=\"inherit\" variant=\"body1\">\n                  &copy; {`${new Date().getFullYear()} 饗集點`}\n                </Typography>\n              </Box>\n            </Box>\n          </CardMedia>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n\nexport default LoginView;\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n"],"sourceRoot":""}