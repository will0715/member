{"version":3,"sources":["views/branch/BranchCreate/BranchCreateForm.js","views/branch/BranchCreate/Header.js","views/branch/BranchCreate/index.js","hooks/useIsMountedRef.js","utils/analytics.js","components/Page.js","../node_modules/@material-ui/icons/NavigateNext.js","hooks/useSnackbar.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","services/branchService.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js"],"names":["useStyles","makeStyles","root","BranchCreateForm","className","rest","classes","successSnackbar","useSnackbar","t","useTranslation","history","useHistory","initialValues","code","name","store_name","email","telephone","fax","note","zipcode","state","city","county","address","latitude","longitude","remark","opening_times","is_independent","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","branchService","create","success","push","submit","response","data","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","clsx","Card","CardContent","Box","mb","Alert","severity","Grid","container","spacing","item","md","xs","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","value","variant","type","Typography","color","Switch","checked","edge","mt","Button","disabled","Header","Breadcrumbs","separator","fontSize","aria-label","Link","to","component","RouterLink","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","BranchEditView","useIsMountedRef","Page","title","Container","maxWidth","isMounted","useRef","useEffect","current","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","Helmet","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","enqueueSnackbar","useBaseSnackbar","text","anchorOrigin","vertical","horizontal","createSvgIcon","React","list","axios","get","branches","post","branch","id","update","patch","delete","defaultIconMapping","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","action","_props$closeText","closeText","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","_props$variant","other","_objectWithoutProperties","Paper","_extends","square","elevation","concat","capitalize","IconButton","size","onClick","withStyles","getColor","darken","lighten","getBackgroundColor","typography","body2","borderRadius","display","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","flexDirection","justifyContent","alignItems","marginLeft","paddingLeft"],"mappings":"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","file":"static/js/24.399ce332.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router';\nimport useSnackbar from '../../../hooks/useSnackbar';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport branchService from '../../../services/branchService';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction BranchCreateForm({ className, ...rest }) {\n  const classes = useStyles();\n  const { successSnackbar } = useSnackbar();\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <Formik\n      initialValues={{\n        code: '',\n        name: '',\n        store_name: '',\n        email: '',\n        telephone: '',\n        fax: '',\n        note: '',\n        zipcode: '',\n        state: '',\n        city: '',\n        county: '',\n        address: '',\n        latitude: 0,\n        longitude: 0,\n        remark: '',\n        opening_times: '',\n        is_independent: false\n      }}\n      validationSchema={Yup.object().shape({\n        code: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Code') })),\n        name: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Name') })),\n        store_name: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Store Name') })),\n        email: Yup.string()\n          .email(t('Must be a valid email'))\n          .max(255),\n        latitude: Yup.number(),\n        longitude: Yup.number(),\n        is_independent: Yup.bool()\n      })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          await await branchService.create({\n            ...values\n          });\n          setStatus({ success: true });\n          setSubmitting(false);\n          successSnackbar(t('Created', { name: t('Branch') }));\n          history.push('/branches');\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.response.data.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form className={clsx(classes.root, className)} onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              {errors.submit && (\n                <Box mb={3}>\n                  <Alert severity=\"error\">{errors.submit}</Alert>\n                </Box>\n              )}\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label={t('Name')}\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.code && errors.code)}\n                    fullWidth\n                    helperText={touched.code && errors.code}\n                    label={t('Code')}\n                    name=\"code\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.code}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.store_name && errors.store_name)}\n                    fullWidth\n                    helperText={touched.store_name && errors.store_name}\n                    label={t('Store Name')}\n                    name=\"store_name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.store_name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.telephone && errors.telephone)}\n                    fullWidth\n                    helperText={touched.telephone && errors.telephone}\n                    label={t('Telephone')}\n                    name=\"telephone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.telephone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label={t('Email address')}\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.fax && errors.fax)}\n                    fullWidth\n                    helperText={touched.fax && errors.fax}\n                    label={t('Fax')}\n                    name=\"fax\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.fax}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.note && errors.note)}\n                    fullWidth\n                    helperText={touched.note && errors.note}\n                    label={t('Note')}\n                    name=\"note\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.note}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.zipcode && errors.zipcode)}\n                    fullWidth\n                    helperText={touched.zipcode && errors.zipcode}\n                    label={t('Zipcode')}\n                    name=\"zipcode\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.zipcode}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label={t('State')}\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.city && errors.city)}\n                    fullWidth\n                    helperText={touched.city && errors.city}\n                    label={t('City')}\n                    name=\"city\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.city}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.county && errors.county)}\n                    fullWidth\n                    helperText={touched.county && errors.county}\n                    label={t('County')}\n                    name=\"county\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.county}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.address && errors.address)}\n                    fullWidth\n                    helperText={touched.address && errors.address}\n                    label={t('Address')}\n                    name=\"address\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.latitude && errors.latitude)}\n                    fullWidth\n                    helperText={touched.latitude && errors.latitude}\n                    label={t('Latitude')}\n                    name=\"latitude\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.latitude}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.longitude && errors.longitude)}\n                    fullWidth\n                    helperText={touched.longitude && errors.longitude}\n                    label={t('Longitude')}\n                    name=\"longitude\"\n                    type=\"number\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.longitude}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.remark && errors.remark)}\n                    fullWidth\n                    helperText={touched.remark && errors.remark}\n                    label={t('Remark')}\n                    name=\"remark\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.remark}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.opening_times && errors.opening_times)}\n                    fullWidth\n                    helperText={touched.opening_times && errors.opening_times}\n                    label={t('Opening Times')}\n                    name=\"opening_times\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.opening_times}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                <Grid item md={6} xs={12}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    {t('Is Independent')}\n                  </Typography>\n                  <Switch\n                    checked={values.is_independent}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"is_independent\"\n                    onChange={handleChange}\n                    value={values.is_independent}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                  {t('Submit')}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nBranchCreateForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default BranchCreateForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Breadcrumbs, Link, Typography, makeStyles } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link variant=\"body1\" color=\"inherit\" to=\"/\" component={RouterLink}>\n          {t('Dashboard')}\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/branches\"\n          component={RouterLink}\n        >\n          {t('Branch List')}\n        </Link>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          {t('Create Branch')}\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        {t('Create Branch')}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport BranchCreateForm from './BranchCreateForm';\nimport Header from './Header';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport branchService from '../../../services/branchService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction BranchEditView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { t } = useTranslation();\n\n  return (\n    <Page className={classes.root} title={t('Create Branch')}>\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <BranchCreateForm />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default BranchEditView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import { useContext } from 'react';\nimport { useSnackbar as useBaseSnackbar } from 'notistack';\n\nexport default function useSnackbar() {\n  const { enqueueSnackbar } = useBaseSnackbar();\n\n  const successSnackbar = (text) => {\n    enqueueSnackbar(text, {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  return { successSnackbar };\n}\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import axios from '../utils/axios';\n\nclass BranchService {\n  list = async () => {\n    const branches = await axios.get('/api/v1/branches');\n    return branches;\n  };\n\n  create = async (data) => {\n    const branch = await axios.post('/api/v1/branches', data);\n    return branch;\n  };\n\n  get = async (id) => {\n    const branch = await axios.get(`/api/v1/branches/${id}`);\n    return branch;\n  };\n\n  update = async (id, data) => {\n    const branch = await axios.patch(`/api/v1/branches/${id}`, data);\n    return branch;\n  };\n\n  delete = async (id) => {\n    const branch = await axios.delete(`/api/v1/branches/${id}`);\n    return branch;\n  };\n}\n\nconst branchService = new BranchService();\n\nexport default branchService;\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);"],"sourceRoot":""}