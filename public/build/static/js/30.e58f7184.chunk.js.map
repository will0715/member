{"version":3,"sources":["views/user/UserCreate/UserCreateForm.js","views/user/UserCreate/Header.js","views/user/UserCreate/index.js","hooks/useIsMountedRef.js","utils/analytics.js","components/Page.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js"],"names":["useStyles","makeStyles","root","UserCreateForm","className","rest","classes","enqueueSnackbar","useSnackbar","t","useTranslation","initialValues","name","email","password","validationSchema","Yup","shape","max","required","min","onSubmit","values","a","setErrors","setStatus","setSubmitting","userService","create","success","variant","submit","response","data","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","clsx","Card","CardContent","Box","mb","Alert","severity","Grid","container","spacing","item","md","xs","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","value","type","mt","Button","color","disabled","Header","Breadcrumbs","separator","fontSize","aria-label","Link","to","component","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","UserEditView","Page","title","Container","maxWidth","useIsMountedRef","isMounted","useRef","useEffect","current","track","window","gtag","pageview","props","process","REACT_APP_GA_MEASUREMENT_ID","event","forwardRef","ref","children","location","useLocation","sendPageViewEvent","useCallback","page_path","pathname","Helmet","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","createSvgIcon","React","defaultIconMapping","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","action","_props$closeText","closeText","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","_props$variant","other","_objectWithoutProperties","Paper","_extends","square","elevation","concat","capitalize","IconButton","size","onClick","withStyles","getColor","darken","lighten","getBackgroundColor","typography","body2","borderRadius","display","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","flexDirection","justifyContent","alignItems","marginLeft","paddingLeft"],"mappings":"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","file":"static/js/30.e58f7184.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useTranslation } from 'react-i18next';\nimport userService from '../../../services/userService';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction UserCreateForm({ className, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const { t } = useTranslation();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .max(255)\n          .required(t('is required', { name: t('Name') })),\n        email: Yup.string()\n          .email(t('Must be a valid email'))\n          .max(255)\n          .required(t('is required', { name: t('Email') })),\n        password: Yup.string()\n          .min(6, t('Must be at least 6 characters'))\n          .max(255)\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await await userService.create({\n            ...values\n          });\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar(t('Created', { name: t('User') }), {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.response.data.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              {errors.submit && (\n                <Box mb={3}>\n                  <Alert severity=\"error\">{errors.submit}</Alert>\n                </Box>\n              )}\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label={t('Name')}\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label={t('Email address')}\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label={t('Password')}\n                    name=\"password\"\n                    type=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  {t('Submit')}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nUserCreateForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default UserCreateForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Breadcrumbs, Link, Typography, makeStyles } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link variant=\"body1\" color=\"inherit\" to=\"/\" component={RouterLink}>\n          {t('Dashboard')}\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/users\"\n          component={RouterLink}\n        >\n          {t('User List')}\n        </Link>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          {t('Create User')}\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        {t('Create User')}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport UserCreateForm from './UserCreateForm';\nimport Header from './Header';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport userService from '../../../services/userService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction UserEditView() {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Page className={classes.root} title={t('Create User')}>\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <UserCreateForm />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default UserEditView;\n","import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","function track(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n\n  if (!window.gtag) {\n    return;\n  }\n\n  window.gtag(...args);\n}\n\nfunction pageview(props) {\n  track('config', process.env.REACT_APP_GA_MEASUREMENT_ID, props);\n}\n\nfunction event(type, props) {\n  track('event', type, props);\n}\n\nexport default {\n  pageview,\n  event\n};\n","import React, { forwardRef, useEffect, useCallback } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router';\nimport PropTypes from 'prop-types';\nimport track from '../utils/analytics';\n\nconst Page = forwardRef(({ title, children, ...rest }, ref) => {\n  const location = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: location.pathname\n    });\n  }, [location]);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);"],"sourceRoot":""}